[package]
# Semantic Versionning is used: https://semver.org/
version = "0.1.0"

# Lists people or organizations that are considered the "authors" of the package.
authors = [""]

# The title and description fields are primarly for displaying extension info in UI
title = "Python Extension Example"
description="The simplest python extension example. Use it as a starting point for your extensions."

# Path (relative to the root) or content of readme markdown file for UI.
readme  = "docs/README.md"

# URL of the extension source repository.
repository=""

# One of categories for UI.
category = "Example"

# Keywords for the extension
keywords = ["kit", "example"]

# Location of change log file in target (final) folder of extension, relative to the root.
# More info on writing changelog: https://keepachangelog.com/en/1.0.0/
changelog="docs/CHANGELOG.md"

# Preview image and icon. Folder named "data" automatically goes in git lfs (see .gitattributes file).
# Preview image is shown in "Overview" of Extensions window. Screenshot of an extension might be a good preview image.
preview_image = "data/preview.png"

# Icon is shown in Extensions window, it is recommended to be square, of size 256x256.
icon = "data/icon.png"

[dependencies]
# use omni.ui + main window to build simple UI
"omni.kit.uiapp" = {}


# Main python module this extension provides, it will be publicly available as "import omni.example.hello".
[[python.module]]
name = "ul.gemini.core"

[documentation]
pages = [
    "docs/Overview.md",
    "docs/CHANGELOG.md",
]

[[test]]
# Extra dependencies only to be used during test run
dependencies = [
    "omni.kit.ui_test",
    "ul.shared.services",
    "syntway.model_exploder"
]

args = [
    "--/app/window/dpiScaleOverride=1.0",
    "--/app/window/scaleToMonitor=false",
    "--no-window"
]

# Ignore some error messages from failing the test
stdoutFailPatterns.exclude = [
    "*Failed to initialize the symbol handler*",
]
